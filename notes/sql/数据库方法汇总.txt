# 数据库方法

## mysql方法

  1. 数学函数:
           ABS(X):返回X的绝对值.
           MOD(N,M)或%:返回N被M除的余数.
           CEILING(X):返回不小于X的最小整数值.
           ROUND(X) :返回参数X的四舍五入的一个整数.

  2. 字符串函数:
           ASCII(str):返回字符串str的最左面字符的ASCII代码值。如果str是空字符串，返回0。如果str是NULL，返回NULL.
           CONCAT(str1,str2,...):返回来自于参数连结的字符串。如果任何参数是NULL，返回NULL。可以有超过2个的参数。一个数字参数被变换为等价的字符串形式.
           LENGTH(str):返回字符串str的长度.
           LOCATE(substr,str):返回子串substr在字符串str第一个出现的位置，如果substr不是在str里面，返回0.
           INSTR(str,substr):返回子串substr在字符串str中的第一个出现的位置.
           LEFT(str,len):返回字符串str的最左面len个字符.
           RIGHT(str,len):返回字符串str的最右面len个字符.
           SUBSTRING(str,pos):从字符串str的起始位置pos返回一个子串.
           TRIM(str):返回字符串str，所有前缀或后缀被删除了.
           LTRIM(str):返回删除了其前置空格字符的字符串str.
           RTRIM(str):返回删除了其拖后空格字符的字符串str.
           REPLACE(str,from_str,to_str):返回字符串str，其字符串from_str的所有出现由字符串to_str代替.
           REPEAT(str,count):返回由重复countTimes次的字符串str组成的一个字符串。如果count <= 0，返回一个空字符串。如果str或count是NULL，返回NULL.
           REVERSE(str):返回颠倒字符顺序的字符串str.
           INSERT(str,pos,len,newstr):返回字符串str，在位置pos起始的子串且len个字符长的子串由字符串newstr代替.

  3. 处理时间
           DAYOFWEEK(date):返回日期date的星期索引(1=星期天，2=星期一, …7=星期六).
           WEEKDAY(date):返回date的星期索引(0=星期一，1=星期二, ……6= 星期天).
           DAYOFMONTH(date):返回date的月份中的日期，在1到31范围内.
           DAYOFYEAR(date):返回date在一年中的日数, 在1到366范围内.
           MONTH(date):返回date的月份，范围1到12.
           DAYNAME(date):返回date的星期名字.
           MONTHNAME(date) :返回date的月份名字.
           QUARTER(date):返回date一年中的季度，范围1到4.
           WEEK(date,first):对于星期天是一周的第一天的地方，有一个单个参数，返回date的周数，范围在0到52。2个参数形式WEEK()允许你指定星期是否开始于星期天或星期一。如果第二个参数是0，星期从星期天开始，如果第二个参数是1，从星期一开始
           YEAR(date):返回date的年份，范围在1000到9999.
           HOUR(time):返回time的小时，范围是0到23.
           MINUTE(time):返回time的分钟，范围是0到59.
           SECOND(time):回来time的秒数，范围是0到59.
           DATE_ADD(date,INTERVAL expr type) ,进行日期增加的操作，可以精确到秒.
           DATE_SUB(date,INTERVAL expr type) ，进行日期减少的操作，可以精确到秒.
           CURRENT_DATE:以‘YYYY-MM-DD’或YYYYMMDD格式返回今天日期值，取决于函数在一个字符串还是数字上下文被使用.
           CURRENT_TIME:以‘HH:MM:SS’或HHMMSS格式返回当前时间值.
           NOW():以‘YYYY-MM-DD HH:MM:SS’或YYYYMMDDHHMMSS格式返回当前的日期和时间.

  4. 流程控制函数
           CASE value WHEN [compare-value] THEN result [WHEN [compare-value] THEN result ...] [ELSE result] END CASE WHEN [condition] THEN result [WHEN [condition] THEN result ...] [ELSE result] END: 在第一个方案的返回结果中， value=compare-value。而第二个方案的返回结果是第一种情况的真实结果。如果没有匹配的结果值，则返回结果为ELSE后的结果，如果没有ELSE 部分，则返回值为 NULL
           IF(expr1,expr2,expr3): 如果 expr1 是TRUE (expr1 <> 0 and expr1 <> NULL)，则 IF()的返回值为expr2; 否则返回值则为 expr3。IF() 的返回值为数字值或字符串值，具体情况视其所在语境而定
           Strcmp(str1,str2):如果str1>str2返回1,str1=str2反回0，str1<str2返回-1).
  5. 系统信息函数

           VERSION()函数返回数据库的版本号.
           CONNECTION_ID()函数返回服务器的连接数，也就是到现在为止MySQL服务的连接次数.
           DATABASE()和SCHEMA()返回当前数据库名.
           USER()、SYSTEM_USER()、SESSION_USER()、CURRENT_USER()和CURRENT_USER这几个函数可以返回当前用户的名称.
           CHARSET(str)函数返回字符串str的字符集，一般情况这个字符集就是系统的默认字符集；COLLATION(str)函数返回字符串str的字符排列方式.
           LAST_INSERT_ID()函数返回最后生成的AUTO_INCREMENT值.

  6. 加密函数
           PASSWORD(str)函数可以对字符串str进行加密。一般情况下，PASSWORD(str)函数主要是用来给用户的密码加密的.
           MD5(str)函数可以对字符串str进行加密。MD5(str)函数主要对普通的数据进行加密.
           ENCODE(str,pswd_str)函数可以使用字符串pswd_str来加密字符串str。加密的结果是一个二进制数，必须使用BLOB类型的字段来保存它.
           DECODE(crypt_str,pswd_str)函数可以使用字符串pswd_str来为crypt_str解密。crypt_str是通过ENCODE(str,pswd_str)加密后的二进制数据。字符串pswd_str应该与加密时的字符串pswd_str是相同的

  7. 其他函数
           FORMAT(x,n)函数可以将数字x进行格式化，将x保留到小数点后n位。这个过程需要进行四舍五入。例如FORMAT(2.356,2)返回的结果将会是2.36.
           ASCII(s)返回字符串s的第一个字符的ASCII码；BIN(x)返回x的二进制编码；HEX(x)返回x的十六进制编码；OCT(x)返回x的八进制编码；CONV(x,f1,f2)将x从f1进制数变成f2进制数.
           INET_ATON(IP)函数可以将IP地址转换为数字表示；INET_NTOA(n)函数可以将数字n转换成IP的形式。其中，INET_ATON(IP)函数中IP值需要加上引号。这两个函数互为反函数.
           BENCHMARK(count,expr)函数将表达式expr重复执行count次，然后返回执行时间。该函数可以用来判断MySQL处理表达式的速度.
           GET_LOCT(name,time)函数定义一个名称为nam、持续时间长度为time秒的锁。如果锁定成功，返回1；如果尝试超时，返回0；如果遇到错误，返回NULL。RELEASE_LOCK(name)函数解除名称为name的锁。如果解锁成功，返回1；如果尝试超时，返回0；如果解锁失败，返回NULL；IS_FREE_LOCK(name)函数判断是否使用名为name的锁。如果使用，返回0；否则，返回1
           CONVERT(s USING cs)函数将字符串s的字符集变成cs.
           CAST(x AS type)和CONVERT(x,type)这两个函数将x变成type类型。这两个函数只对BINARY、CHAR、DATE、DATETIME、TIME、SIGNED INTEGER、UNSIGNED INTEGER这些类型起作用。但两种方法只是改变了输出值的数据类型，并没有改变表中字段的类型.

## oracle方法

  1. 数值函数
           CEIL(n):大于或等于数值n的最小整数.SELECT CEIL(10.6) FROM TABLE_NAME; 11
           FLOOR(n):小于等于数值n的最大整数　  SELECT FLOOR (10.6) FROM TABLE_NAME; 10
           MOD(m,n):m除以n的余数,若n=0,则返回m SELECT MOD (7,5) FROM TABLE_NAME l; 2
           POWER(m,n):m的n次方　SELECT POWER (3,2) FROM TABLE_NAME; 9
           ROUND(n,m):将n四舍五入,保留小数点后m位 SELECT ROUND (1234.5678,2) FROM TABLE_NAME; 1234.57
           SIGN(n):若n=0,则返回0,否则,n>0,则返回1,n<0,则返回-1 SELECT SIGN (12) FROM TABLE_NAME; 1
           SQRT(n):n的平方根　SELECT SQRT (25) FROM TABLE_NAME; 5
           AVG([distinct l all] expr).
           MAX([distinct l all] expr).
           MIN([distinct l all] expr).
           SUM([distinct l all] expr).
           COUNT([distinct l all] expr) MIN([distinct l all] expr):返回查询的记录数
  2. 常用字符函数
           INITICAP(char):把每个字符串的第一个字符换成大写.
           LOWER(char):整个字符串换成小写.
           REPLACE(char,str1,str2):字符串中所有str1换成str2.
           SUBSTR(char,m,n):取出从m字符开始的n个字符的子串.
           LENGTH(char):求字符串的长度.
           ||:并置运算符 SELECT 'ABCD'||'EFGH' FROM TABLE_NAME;  ABCDEFGH
           CONCAT (char1, char2):返回连接“char2”的“char1”.
           INITCAP(string):将“string”的字符转成大写.
           LPAD(char1,n [,char2]):返回“char1”，左起由“char2”中的字符补充到“n”个字符长。如果“char1”比“n”长，则函数返回“char1”的前“n”个字符.
           LTRIM(string,trim_set):从左边删除字符，此处“string”是数据库的列，或者是字面字符串，而“trim_set” 是我们要去掉的字符的集合.
           REPLACE(string, if, then):用 0 或其他字符代替字符串中的字符。“if”是字符或字符串，对于每个出现在“string”中的“if”，都用“then”的内容代替.
           RPAD(char1, n [,char2]):返回“char1”，右侧用“char2”中的字符补充到“n”个字符长。如果 “char1”比“n” 长，则函数返回“char1”的前“n”个字符.
           RTRIM(string,trim_set):从右侧删除字符，此处“string”是数据库的列，或者是字面字符串，而“trim_set” 是我们要去掉的字符的集合.
           TRANSLATE(string, if, then):“if”中字符的位置，并检查“then”的相同位置，然后用该位置的字符替换 “string”中的字符.
           UPPER(string):返回大写的“string”.
           ASCII(string):该命令是“American Standard Code for Information Interchange”的缩写。它是使用数字表示可打印字符的基本规则。该函数返回 “string”中第一个（最左边）字符的 ASCII 值
           INSTR (string, set[, start[, occurrence] ] ):该命令“string”中从“start”位置开始查找字符集合的位置，再查找“set”出现的第一次、第二次等等的“occurrence”（次数）。“start”的值也可以是负数，代表从字符串结尾开始向反方向搜索。该函数也用于数字和日期数据类型

  3. 日期型函数
           SYSDATE:当前日期和时间 SELECT SYSDATE FROM TABLE_NAME;
           LAST_DAY:本月最后一天 SELECT LAST_DAY(SYSDATE) FROM TABLE_NAME;
           ADD_MONTHS(d,n):当前日期d后推n个月 SELECT ADD_MONTHS (SYSDATE,2) f FROM TABLE_NAME;
           MONTHS_BETWEEN(d,n):日期d和n相差月数 SELECT MONTHS_BETWEEN(SYSDATE,TO_DATE('20020812','YYYYMMDD'))FROMTABLE_NAME;
           NEXT_DAY(d,day) d后第一周指定day的日期 SELECT NEXT_DAY (SYSDATE,'Monday') FROM TABLE_NAME;
           TO_CHAR(SYSDATE,'YYY').获取特定格式的日期字符串，'YYYY-MM-DD HH:24:mi:ss'：格式可以符合规则下任意形式
           TO_NUMBER() 将合法的字符串转换为数字   SELECT TO_NUMBER ('88877') FROM TABLE_NAME; 88877
           字符串和时间互转:select to_date('2004-05-07 13:23:44','yyyy-mm-dd hh24:mi:ss') from dual; select to_char( to_date(222,'J'),'Jsp') from dual //显示Two Hundred Twenty-Two

  4. NULL函数
           COALESCE(expr):返回表达式列表中第一个不为NULL的函数，如果都为NULL，则返回一个null.
           LNNVL(condition):返回除了condition要求的条件之外的数据，包括NULL的条件，通常用于WHERE条件中.
           NVL(expr1,expr2[,expr3]):NVL(expr1,expr2)，替换NULL值，如果expr1为NULL值，则返回expr2的值，否则返回expr1的值。该函数要求两个参数类型一致至少相互之间可以进行隐式的转换.

  5, 其他函数
           USER:返回登录名函数,
           USERENV(parameter):返回当前会话信息.
           SYS_CONTEXT(namespace,parameter):返回oracle已经创建的context，名为USERENV的属性对应值
           DECODE(expr,search,result[,search1,result1][,default]):表达式匹配函数，当expr符合条件search时返回result的值，该过程可以重复多个，如果没有匹配结果放回默认值default，这是一对一匹配过程，类似switch
